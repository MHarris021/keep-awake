@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700&display=swap');

:root {
    --neon-blue: #00FFFF;
    --neon-green: #00FF00;
    --neon-pink: #FF007F;
    --dark-background: #121212;
    --light-background: #2E2E2E;
    --light-text: #E5E5E5;
    --dark-text: #333;
    --disabled-background: #2E2E2E;
    --disabled-text: #555;
    --toggle-off: #bbb;
    --shadow-blue: #008b8b;
    --shadow-pink: #cc0066;
    --shadow-green: #009900;
}

@keyframes pulse-blue {
    0% {
        box-shadow: 0 0 0 var(--shadow-blue) inset;
    }
    50% {
        box-shadow: 0 0 10px var(--neon-blue) inset;
    }
    100% {
        box-shadow: 0 0 0 var(--shadow-blue) inset;
    }
}

@keyframes pulse-green {
    0% {
        box-shadow: 0 0 10px var(--neon-green) inset;
    }
    50% {
        box-shadow: 0 0 0 var(--shadow-green) inset;
    }
    100% {
        box-shadow: 0 0 10px var(--neon-green) inset;
    }
}
@keyframes moveGrid {
    0% {
        background-position: 0 0, 0 0, 0 0, 0 0, 0 0, 0 0;
    }
    12% {
        background-position: 100% 100%, 100% 100%, 100% 100%, 100% 100%, 100% 100%, 100% 100%;
    }
    25% {
        background-position: 100% 0, 100% 0, 100% 0, 100% 0, 100% 0, 100% 0;
    }
    37% {
        background-position: 0 100%, 0 100%, 0 100%, 0 100%, 0 100%, 0 100%;
    }
    50% {
        background-position: 0 0, 0 0, 0 0, 0 0, 0 0, 0 0;
    }
    63% {
        background-position: 100% 100%, 100% 100%, 100% 100%, 100% 100%, 100% 100%, 100% 100%;
    }
    75% {
        background-position: 0 100%, 0 100%, 0 100%, 0 100%, 0 100%, 0 100%;
    }
    88% {
        background-position: 100% 0, 100% 0, 100% 0, 100% 0, 100% 0, 100% 0;
    }
    100% {
        background-position: 0 0, 0 0, 0 0, 0 0, 0 0, 0 0;
    }
}
@keyframes pulse-text-blue {
    0% {
        transform: scale(1);
        color: var(--neon-blue);
        text-shadow: 0 0 4px var(--neon-blue), 0 0 11px var(--neon-pink), 0 0 19px var(--neon-blue);
    }
    50% {
        transform: scale(1.05);
        color: var(--light-text);
        text-shadow: 0 0 20px var(--neon-blue), 0 0 30px var(--neon-blue), 0 0 40px var(--neon-blue);
    }
    100% {
        transform: scale(1);
        color: var(--neon-blue);
        text-shadow: 0 0 4px var(--neon-blue), 0 0 11px var(--neon-pink), 0 0 19px var(--neon-blue);
    }
}

@keyframes pulse-text-pink {
    0% {
        transform: scale(1);
        color: var(--neon-pink);
        text-shadow: 0 0 4px var(--neon-pink), 0 0 11px var(--neon-blue), 0 0 19px var(--neon-pink);
    }
    50% {
        transform: scale(1.05);
        color: var(--light-text);
        text-shadow: 0 0 20px var(--neon-pink), 0 0 30px var(--neon-pink), 0 0 40px var(--neon-pink);
    }
    100% {
        transform: scale(1);
        color: var(--neon-pink);
        text-shadow: 0 0 4px var(--neon-pink), 0 0 11px var(--neon-blue), 0 0 19px var(--neon-pink);
    }
}
.cyber-rain {
    background-color: var(--dark-background);
    margin: 0;
    display: flex; /* Use flexbox for layout */
    flex-direction: column; /* Arrange items vertically */
    border-radius: 5px; /* Rounded corners for the container */
    overflow: hidden; /* Ensure the shadow doesn't leak outside the border-radius */
    background-image:
        /* Horizontal lines */
            linear-gradient(0deg, rgba(0, 255, 255, 0.7), rgba(0, 255, 255, 0.7) 1px, transparent 1px, transparent),
            linear-gradient(0deg, rgba(0, 255, 0, 0.7), rgba(0, 255, 0, 0.7) 1px, transparent 1px, transparent),
            linear-gradient(0deg, rgba(255, 0, 127, 0.7), rgba(255, 0, 127, 0.7) 1px, transparent 1px, transparent),
                /* Vertical lines */
            linear-gradient(90deg, rgba(0, 255, 255, 0.7), rgba(0, 255, 255, 0.7) 1px, transparent 1px, transparent),
            linear-gradient(90deg, rgba(0, 255, 0, 0.7), rgba(0, 255, 0, 0.7) 1px, transparent 1px, transparent),
            linear-gradient(90deg, rgba(255, 0, 127, 0.7), rgba(255, 0, 127, 0.7) 1px, transparent 1px, transparent);

    /* Adjust the size of the "circuit lines" */
    background-size: 50px 50px, 100px 100px, 150px 150px, 50px 50px, 100px 100px, 150px 150px;
    /* Make the background fixed to create a parallax-like effect */
    background-attachment: fixed;
    animation: moveGrid 54s cubic-bezier(0,0,1,1) infinite;
    will-change: background-position;
}
.pulsing-text {
    display: inline-block; /* Required for transform to work */
    animation: pulse-text-blue 6s infinite ease-in-out;
    will-change: transform, color, text-shadow;
}
.pulsing-text:hover {
    animation: none;
    color: var(--light-text);
    text-shadow: 0 0 20px var(--neon-blue), 0 0 30px var(--neon-blue), 0 0 40px var(--neon-blue);
    will-change: transform, color, text-shadow;
}
.no-pulsing-text {
    color: var(--light-text);
    text-shadow: 0 0 20px var(--neon-blue), 0 0 30px var(--neon-blue), 0 0 40px var(--neon-blue);
}
.pulsing-header {
    display: inline-block; /* Required for transform to work */
    animation: pulse-text-pink 6s infinite ease-in-out;
    will-change: transform, color, text-shadow;
}
.no-pulsing-header {
    display: inline-block; /* Required for transform to work */
    color: var(--light-text);
    text-shadow: 0 0 20px var(--neon-pink), 0 0 30px var(--neon-pink), 0 0 40px var(--neon-pink);
}
.pulse-blue {
    animation: pulse-blue 6s infinite ease-in-out;
    will-change: box-shadow;
}
.pulse-blue:hover {
    animation: none;
    box-shadow: 0 0 10px var(--neon-blue) inset;
    will-change: box-shadow;
}
.pulse-green {
    animation: pulse-green 6s infinite ease-in-out;
    will-change: box-shadow;
}
.no-pulse-green {
    box-shadow: 0 0 10px var(--neon-green) inset;
}
.no-pulse-blue {
    box-shadow: 0 0 10px var(--neon-blue) inset;
}
body {
    font-family: 'Orbitron', sans-serif;
    margin: 0;
    padding: 0;
    display: flex;
    background: none;
    justify-content: center;
    align-items: center;
    width: 100vw; /* Full viewport width */
    overflow: hidden; /* Hide scrollbars */
    opacity: 90%;

}
.top-container {
    padding: 10px;
    margin: 0;
    display: flex; /* Use flexbox for layout */
    flex-direction: column; /* Arrange items vertically */
    border-radius: 5px; /* Rounded corners for the container */
    background-color: var(--light-background); /* Darker background for the container */
    overflow: hidden; /* Ensure the shadow doesn't leak outside the border-radius */
    width: auto;
}
.container {
    padding: 10px;
    margin: 0;
    display: flex; /* Use flexbox for layout */
    flex-direction: column; /* Arrange items vertically */
    border-radius: 5px; /* Rounded corners for the container */
    box-shadow: 0 0 10px var(--shadow-green) inset; /* Shadow for 3D effect */
    background-color: var(--light-background); /* Darker background for the container */
    overflow: hidden; /* Ensure the shadow doesn't leak outside the border-radius */
    opacity: 80%;
}
h1, h2 {
    color: var(--neon-pink);
    text-align: center; /* Centered headers */
    text-shadow: 2px 2px 2px var(--shadow-pink); /* 3D text effect */
}
h2 {
    font-size: 2em; /* Larger font size for headers */
}
h1 {
    margin-top: 0;
    margin-bottom: 10px; /* Add space below the header */
    font-size: 3em; /* Larger font size for headers */
}
label {
    display: flex; /* Use flexbox for layout */
    justify-content: space-between; /* Space between label text and input/toggle */
    align-items: center; /* Align items vertically */
    padding: 10px;
    border: 1px solid var(--neon-green); /* Green border for the labels */
    border-radius: 15px; /* Rounded edges for the labels */
    box-shadow: 0 0 10px var(--shadow-green) inset; /* Inner shadow for a 3D effect */
    background-color: var(--dark-background); /* Slightly lighter background for label area */
    opacity: 100%;
}
label > span.label-text {
    /* Explicitly define a span to hold the label text to better control layout */
    margin-right: 0.5em; /* Space after the label text */
    font-size: medium;
    color: var(--neon-blue);
    opacity: 100%;
}
input[type="checkbox"], input[type="time"] {
    /* ... existing checkbox and time input styles ... */
    margin-left: auto; /* Push checkbox and time input to the right */
    margin-right: 0; /* Remove space between checkbox and time input */
    color: var(--neon-blue);
}
input[type="checkbox"] {
    display: none; /* Hide checkbox */
}
input[type="time"] {
    background-color: var(--light-background); /* Darker element backgrounds */
    border: 1px solid var(--neon-blue);
    color: var(--neon-blue);
    margin-right: 0;
    border-radius: 5px; /* Rounded corners for input fields */
    padding: 5px;
    box-shadow: 0 0 10px var(--shadow-blue); /* 3D effect for input fields */
    display: inline-block; /* Make input inline-block for same-line layout */
    vertical-align: middle; /* Align the input with the label */
}
input[type="time"]:hover,
input[type="time"]:focus {
    outline: none;
    border-color: var(--neon-pink);
    box-shadow: 0 0 10px var(--shadow-pink) inset;
}
.toggle-switch {
    position: relative;
    display: inline-block; /* Make toggle-switch inline-block */
    width: 60px;
    height: 34px;
    background-color: var(--toggle-off);
    border-radius: 34px; /* Rounded corners for the toggle-switch */
    border-color: var(--neon-blue);
    box-shadow: 0 0 10px var(--shadow-blue) inset; /* Inner shadow for a 3D effect */
}
.toggle-switch:hover{
    cursor: pointer;
    background-color: var(--shadow-blue);
    box-shadow: 0 0 10px var(--shadow-pink) inset;
}
.toggle-switch::before {
    content: "";
    position: absolute;
    width: 26px;
    height: 26px;
    left: 4px;
    bottom: 4px;
    background-color: var(--dark-background);
    transition: 0.4s;
    border-radius: 50%; /* Rounded corners for the toggle knob */
    box-shadow: 0 4px 2px -2px #000; /* Shadow on the knob for 3D effect */
}
input:checked + .toggle-switch {
    background-color: var(--neon-blue);
}
input[type="checkbox"]:checked + .toggle-switch::before {
    transform: translateX(26px); /* Move the toggle knob to the right */
}
button {
    background-color: var(--neon-pink);
    border: none;
    padding: 10px 20px;
    cursor: pointer;
    color: var(--dark-background);
    margin: 10px 5px 0; /* Space around buttons */
    display: inline-block; /* Align buttons next to each other */
    border-radius: 10px; /* Rounded corners for buttons */
    box-shadow: 0 4px var(--shadow-pink); /* 3D effect */
}
button:hover {
    background-color: #ff00cc;
    text-shadow: none;
    box-shadow: 2px 2px 5px #39ff14 inset;
}
button:active {
    background-color: #ff00cc;
    box-shadow: 0 2px #666;
    transform: translateY(4px); /* Move down when clicked */
}
button:disabled {
    background-color: #555;
    color: #777;
    cursor: not-allowed;
    box-shadow: none;
    border: 1px solid #555;
}
div#buttonDiv {
    display: flex; /* Use flexbox for layout */
    justify-content: space-between; /* Space between buttons */
    align-items: center; /* Align items vertically */
    margin-bottom: 5px; /* Space below buttons */
}
.time-input-container {
    position: relative; /* Container for positioning */
    display: inline-block; /* Or 'block', depending on layout */
    /* Adjust the width as needed or leave it out for automatic sizing */
    margin-top: 10px;
    margin-bottom: 10px;
    justify-content: space-between;
    align-items: center;
    width: 100%;
}